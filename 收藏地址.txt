http://www.cnblogs.com/ylvict/p/5573094.html

http://www.cnblogs.com/shanyou/p/3541327.html

http://www.cnblogs.com/anytao/archive/2009/06/01/must_net_32.html

https://www.cnblogs.com/jin-yuan/p/3760216.html

http://www.cnblogs.com/jin-yuan/p/3764800.html

https://msdn.microsoft.com/zh-cn/magazine/mt707534

https://www.cnblogs.com/lzrabbit/archive/2012/04/22/2465313.html

https://www.yiibai.com/ado.net/

https://blog.csdn.net/kisscatforever/article/details/50714604






https://www.google.com/search?q=sql+where+condition+if+else&ei=81pYW-rrD8ii-Qa0p5K4BA&start=10&sa=N&biw=1440&bih=777

https://stackoverflow.com/questions/13171748/how-to-use-if-statement-in-where-clause-in-sql

https://raresql.com/2013/06/28/sql-server-how-to-use-if-else-in-where-clause/

https://bbs.csdn.net/topics/80123127


https://stackoverflow.com/questions/18629132/conditional-where-clause-in-sql-server




https://www.cnblogs.com/cgzl/p/9365955.html
https://docs.microsoft.com/zh-cn/dotnet/welcome


https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000




https://blog.csdn.net/sadfishsc/article/details/7464858


http://desk.zol.com.cn/bizhi/6927_86239_2.html

https://codewith.mu/




https://docs.microsoft.com/zh-cn/
https://docs.microsoft.com/zh-cn/dotnet/csharp/
https://docs.microsoft.com/zh-cn/sql/?view=sql-server-2017


https://www.jianshu.com/p/f212527d76ff
https://blog.csdn.net/jueblog/article/details/9673505
https://www.cnblogs.com/lyhabc/p/3279056.html
https://www.cnblogs.com/chillsrc/category/49632.html
http://www.codingwhy.com/view/796.html


https://blog.fundebug.com/2018/08/22/art-of-debugging-with-chrome-devtools/
https://blog.csdn.net/ryuenkyo/article/details/80935470
https://reactjs.org.cn/doc/hello-world.html
https://ant.design/docs/react/getting-started-cn
https://yarn.org.cn/doc/index.html

https://docs.microsoft.com/zh-cn/aspnet/core/?view=aspnetcore-2.1
https://docs.microsoft.com/zh-cn/visualstudio/python/overview-of-python-tools-for-visual-studio
http://www.box3.cn/page/contrast.html


https://www.cnblogs.com/jesse2013/p/async-and-await.html
http://www.cnblogs.com/landeanfen/p/4734252.html






https://developer.mozilla.org/zh-CN/docs/Web
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript
https://reactjs.org.cn/doc/hello-world.html
http://cn.redux.js.org/
https://ant.design/index-cn
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain



https://huangxuan.me/2015/07/09/js-module-7day/
https://paper.seebug.org/229/
https://webpack.js.org/concepts/
https://www.tangshuang.net/3126.html#title-1
https://www.gulpjs.com.cn/
http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html
https://www.kancloud.cn/digest/babel/217103
https://www.cnblogs.com/sker/p/5482400.html

https://webpack.js.org/
https://www.babeljs.cn/
https://reactjs.org/


https://github.com/rihammisuk/Online-Examination-System-asp.net-mvc-
https://github.com/Hibrahima/Online-Exam-System


https://www.cnblogs.com/xiaoxiaocainia/p/5704156.html
https://www.cnblogs.com/yidianfeng/p/7765984.html
http://www.cnblogs.com/ymnets/p/3424309.html
https://www.cnblogs.com/hanyinglong/p/3236966.html
https://github.com/chi8708/NBCZ


https://react.docschina.org/docs/hello-world.html
http://react.yubolun.com/docs/hello-world.html
http://www.ruanyifeng.com/blog/2015/03/react.html
http://wiki.jikexueyuan.com/project/react/



http://www.cnblogs.com/ayqy/p/4471638.html
https://ts.xcatliu.com/
https://www.tslang.cn/
http://www.ruanyifeng.com/blog/2011/06/birth_of_javascript.html
http://www.cnblogs.com/ayqy/p/4471638.html



https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/index
https://www.cnblogs.com/zhaoqingqing/p/3896826.html
https://www.jetbrains.com/help/resharper/2018.2/Speeding_Up_ReSharper.html
chrome://flags/#top-chrome-md

https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/concepts/index


https://marketplace.visualstudio.com/items?itemName=MadsKristensen.FileNesting
https://marketplace.visualstudio.com/items?itemName=vs-publisher-57624.GitFlowforVisualStudio2017




https://www.tslang.cn/docs/handbook/typescript-in-5-minutes.html
http://www.dalbll.com/Group/Topic/ASP.NET/5373


https://archive.codeplex.com/?p=epplus
https://www.cnblogs.com/tanpeng/p/6155749.html


https://www.cnblogs.com/kushisei/p/6498473.html
https://blog.csdn.net/yanhuatangtang/article/details/72780217

https://firebase.google.com/docs/auth/?hl=zh-cn







2.捞取User待发送数据的具体流程：
第1步：捞取需要推送的User的所有信息：
(1).每一个Task只会捞取一种Frequency(推送消息频率)的数据（注意：如果未设置推送频率的User默认以2小时推送数据），所以首先找出设置为当前频率User。
(2).这些User还需要排除：设置了不允许推送部分。
(3).每一轮推送对于一个User有且仅有1次，所以要排除本次已经推送了的User
(4).如果此Task为处理2小时数据的Task，那还需要排除内部User，并且状态为可用。
由于Seller过多，所以设置参数：MaxProcessSellerCount 分批次处理这些Seller，此时获取的数据Json格式举例如下：
[
    {
        "SellerID": "BHS9",
	"AllNotificationType": [0,1,2,3,4],
        "User": [
            {
                "UserID": "100012",
                "UserEmailAddress": "Kyle.Y.Li@newegg.com",
                "DeviceToken": "0cd35e506b546c0327a52783b6dac40c766e0bc583fda558438b92816e9be0fe7e0aeff65b07439e",
                "NotificationType": 0,
                "PlatformCode": "USA"
            },
            {
                "UserID": "100013",
                "UserEmailAddress": "kl1m@newegg.com",
				"DeviceToken"："6bc99bf63372b3bfa27e1759ae8f337e35c113cc004fb1e7987d463ce301032b98c582bc1163f76176af6a6cc7",
                "DeviceToken": 1,
                "PlatformCode": "USA"
            }
        ]
    }
]
获取非默认时间(2小时)User数据的SQL如下：
 SELECT TOP (1000) SNS.[TransactionNumber]
     ,SNS.[SellerID]
     ,SNS.[UserID]
     ,U.[UserEmailAddress]
     ,SNS.[NotificationType]
     ,SND.[DeviceToken]
 FROM [dbo].[MPS_Seller_Notification_SubscriptionSettings] SNS WITH(NOLOCK)
 INNER JOIN [dbo].[EDI_Seller_User] U WITH(NOLOCK)  ON SNS.[SellerID] = U.[SellerID]
 INNER JOIN [dbo].[MPS_Seller_Notification_Devices] SND WITH(NOLOCK) ON U.[UserEmailAddress] = SND.[UserEmailAddress]
 WHERE SNS.[Frequency] = 1   --限制频率 
 AND SNS.[Enable] = 1  --允许消息推送
 AND NOT EXISTS  --现在时间段需要推送数据的User(即：上次推送的时间 到 现在的HOURS，已经大于推送频率)
 (
    SELECT TOP 1 1 FROM [dbo].[MPS_Seller_Notification_SentBuffer] SNS WITH(NOLOCK) 
	WHERE SNS.[UserID] = SNS.[UserID] AND DATEDIFF(HOUR,SNS.[LastSentDate],GETDATE()) > 1
 ) 
 获取默认时间(2小时)User数据的SQL如下：
 --1.EDI_Seller_User临时表，排除内部用户+状态不可用
 --2.左链接以下数据：
  SELECT TOP (1000) 
      U.[SellerID]
     ,U.[UserID] 
     ,U.[UserEmailAddress]
     ,SNS.[NotificationType]
     ,SND.[DeviceToken]
 FROM 
 [dbo].[EDI_Seller_User] U WITH(NOLOCK) 
 INNER JOIN [dbo].[MPS_Seller_Notification_Devices] SND WITH(NOLOCK) ON U.[UserEmailAddress] = SND.[UserEmailAddress] --排除没有token的数据
 LEFT JOIN [dbo].[MPS_Seller_Notification_SubscriptionSettings] SNS WITH(NOLOCK) ON U.[SellerID] = SNS.[SellerID]
 
 特别注意：在捞取数据的时候，为了避免多实例Task对数据重复读取，我们在捞取数据后，就会在日志表将此UserID设置为锁定(手动加锁)。
 
 第二步：由于以上数据Seller数量较多，考虑为多线程处理，现在想到的方案是以TransactionNumber为分界点，奇数行、偶数行分区运算(其实这只是一种规则，也可以前N/2条，后N-N/2条)。
 
 第三步：循环第二步的每一个线程的每一个Seller，通过SellerID去查询每个NotificationType的数据，这里注意：在第一步的数据中已经统计出每一个Seller包括的所有NotificationType，如果Seller下面的User不需要查询所有NotificationType的值，那就可省去一部分查询逻辑。
 
 第四步:从第一步捞取的数据中，根据SellerID查找对应的User，并给每一个User推送相应的数据。
 
 
 
