http://www.cnblogs.com/ylvict/p/5573094.html

http://www.cnblogs.com/shanyou/p/3541327.html

http://www.cnblogs.com/anytao/archive/2009/06/01/must_net_32.html

https://www.cnblogs.com/jin-yuan/p/3760216.html

http://www.cnblogs.com/jin-yuan/p/3764800.html

https://msdn.microsoft.com/zh-cn/magazine/mt707534

https://www.cnblogs.com/lzrabbit/archive/2012/04/22/2465313.html

https://www.yiibai.com/ado.net/

https://blog.csdn.net/kisscatforever/article/details/50714604






https://www.google.com/search?q=sql+where+condition+if+else&ei=81pYW-rrD8ii-Qa0p5K4BA&start=10&sa=N&biw=1440&bih=777

https://stackoverflow.com/questions/13171748/how-to-use-if-statement-in-where-clause-in-sql

https://raresql.com/2013/06/28/sql-server-how-to-use-if-else-in-where-clause/

https://bbs.csdn.net/topics/80123127


https://stackoverflow.com/questions/18629132/conditional-where-clause-in-sql-server




https://www.cnblogs.com/cgzl/p/9365955.html
https://docs.microsoft.com/zh-cn/dotnet/welcome
https://legacy.gitbook.com/@zhengyq


https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000




https://blog.csdn.net/sadfishsc/article/details/7464858


http://desk.zol.com.cn/bizhi/6927_86239_2.html

https://codewith.mu/




https://docs.microsoft.com/zh-cn/
https://docs.microsoft.com/zh-cn/dotnet/csharp/
https://docs.microsoft.com/zh-cn/sql/?view=sql-server-2017


https://www.jianshu.com/p/f212527d76ff
https://blog.csdn.net/jueblog/article/details/9673505
https://www.cnblogs.com/lyhabc/p/3279056.html
https://www.cnblogs.com/chillsrc/category/49632.html
http://www.codingwhy.com/view/796.html


https://blog.fundebug.com/2018/08/22/art-of-debugging-with-chrome-devtools/
https://blog.csdn.net/ryuenkyo/article/details/80935470
https://reactjs.org.cn/doc/hello-world.html
https://ant.design/docs/react/getting-started-cn
https://yarn.org.cn/doc/index.html

https://docs.microsoft.com/zh-cn/aspnet/core/?view=aspnetcore-2.1
https://docs.microsoft.com/zh-cn/visualstudio/python/overview-of-python-tools-for-visual-studio
http://www.box3.cn/page/contrast.html


https://www.cnblogs.com/jesse2013/p/async-and-await.html
http://www.cnblogs.com/landeanfen/p/4734252.html






https://developer.mozilla.org/zh-CN/docs/Web
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript
https://reactjs.org.cn/doc/hello-world.html
http://cn.redux.js.org/
https://ant.design/index-cn
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain



https://huangxuan.me/2015/07/09/js-module-7day/
https://paper.seebug.org/229/
https://webpack.js.org/concepts/
https://www.tangshuang.net/3126.html#title-1
https://www.gulpjs.com.cn/
http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html
https://www.kancloud.cn/digest/babel/217103
https://www.cnblogs.com/sker/p/5482400.html

https://webpack.js.org/
https://www.babeljs.cn/
https://reactjs.org/


https://github.com/rihammisuk/Online-Examination-System-asp.net-mvc-
https://github.com/Hibrahima/Online-Exam-System


https://www.cnblogs.com/xiaoxiaocainia/p/5704156.html
https://www.cnblogs.com/yidianfeng/p/7765984.html
http://www.cnblogs.com/ymnets/p/3424309.html
https://www.cnblogs.com/hanyinglong/p/3236966.html
https://github.com/chi8708/NBCZ


https://react.docschina.org/docs/hello-world.html
http://react.yubolun.com/docs/hello-world.html
http://www.ruanyifeng.com/blog/2015/03/react.html
http://wiki.jikexueyuan.com/project/react/



http://www.cnblogs.com/ayqy/p/4471638.html
https://ts.xcatliu.com/
https://www.tslang.cn/
http://www.ruanyifeng.com/blog/2011/06/birth_of_javascript.html
http://www.cnblogs.com/ayqy/p/4471638.html



https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/index
https://www.cnblogs.com/zhaoqingqing/p/3896826.html
https://www.jetbrains.com/help/resharper/2018.2/Speeding_Up_ReSharper.html
chrome://flags/#top-chrome-md

https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/concepts/index


https://marketplace.visualstudio.com/items?itemName=MadsKristensen.FileNesting
https://marketplace.visualstudio.com/items?itemName=vs-publisher-57624.GitFlowforVisualStudio2017




https://www.tslang.cn/docs/handbook/typescript-in-5-minutes.html
http://www.dalbll.com/Group/Topic/ASP.NET/5373


https://archive.codeplex.com/?p=epplus
https://www.cnblogs.com/tanpeng/p/6155749.html


https://www.cnblogs.com/kushisei/p/6498473.html
https://blog.csdn.net/yanhuatangtang/article/details/72780217

https://firebase.google.com/docs/auth/?hl=zh-cn

https://blog.csdn.net/ch21st/article/details/50991121
https://codedefault.com/2018/linq-remove-duplicates-in-the-list-in-csharp-application
https://www.cnblogs.com/wzf-Code/p/5611496.html




public static string GetObjectPropertyValue(IList<T> list, string propertyname)
{
 string str="";
foreach(T t in list)
{
     Type type = typeof(T);
  
      PropertyInfo property = type.GetProperty(propertyname);
  
      if (property == null) return string.Empty;
  
      object o = property.GetValue(t, null);
  
      if (o == null) return string.Empty;
  
      str= o.ToString();
}
return str;
}


http://npm.taobao.org/mirrors




https://www.cnblogs.com/Beau/p/3491063.html
https://blog.csdn.net/tobbykwok/article/details/24934427
https://blog.csdn.net/qq_23018459/article/details/79540786


https://www.cnblogs.com/lvdongjie/p/5416883.html


https://www.cnblogs.com/EasonJim/p/6556520.html





https://www.cybrary.it/video/part-3-burpsuite/
https://www.cybrary.it/course/secure-coding/
https://www.cybrary.it/skill-certification-course/secure-coding-certification-training-course
https://www.owasp.org/images/5/51/OWASP_Top_10_2013-Chinese-V1.2.pdf









public static IEnumerable<TSource> DistinctBy<TSource, TKey>
    (this IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
{
    HashSet<TKey> seenKeys = new HashSet<TKey>();
    foreach (TSource element in source)
    {
        if (seenKeys.Add(keySelector(element)))
        {
            yield return element;
        }
    }
}

var query = people.DistinctBy(p => p.Id);
var query = people.DistinctBy(p => new { p.Id, p.Name });

//result = result
            //    .GroupBy(t => new { t.PlatformCode, t.PM_ID })
            //    .Select(t => t.FirstOrDefault())
            //    .ToList();
            
            
            
   //再次去重(同一个UserID + 同一个NotificationType + 同一个Token，确定唯一性)
                sources = (from source in sources
                           group source by new { source.UserID, source.NotificationType, source.DeviceToken }
                    into s
                           select s.FirstOrDefault()).ToList();        
                           
                           
                           
                           
                           
 https://docs.microsoft.com/zh-cn/dotnet/standard/parallel-programming/    
 https://stackoverflow.com/questions/38556753/how-can-i-mock-a-method-that-returns-a-taskilist?rq=1
https://npm.taobao.org/
http://docs.automapper.org/en/stable/8.0-Upgrade-Guide.html


https://docs.microsoft.com/zh-cn/dotnet/core/packages
https://docs.microsoft.com/zh-cn/aspnet/core/?view=aspnetcore-2.2
https://docs.microsoft.com/zh-cn/dotnet/standard/base-types/?view=aspnetcore-2.2
https://docs.microsoft.com/zh-cn/dotnet/api/system.net?view=netframework-4.7.2

https://docs.microsoft.com/zh-cn/dotnet/api/system.action?view=netframework-4.7.2
https://docs.microsoft.com/zh-cn/dotnet/api/system.func-1?view=netframework-4.7.2

学习到：
https://docs.microsoft.com/zh-cn/dotnet/standard/using-linq?view=aspnetcore-2.2
https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/statements-expressions-operators/anonymous-functions



https://www.w3cschool.cn/wkcsharp/3df41j39.html
https://docs.microsoft.com/zh-cn/dotnet/api/system.nullable-1.getvalueordefault?view=netframework-4.7.2



http://www.cnblogs.com/polk6/p/5465088.html
https://www.cnblogs.com/GreenLeaves/p/9068793.html



https://github.com/octocean26/Dazzle-DotNETCore


https://coding.net/help/doc/project/markdown.html
http://wow.kuapp.com/markdown/index.html
https://markdown-zh.readthedocs.io/en/latest/
http://www.markdown.cn/
https://github.com/octocean26/Dazzle-DotNETCore/tree/master/notes


http://www.mybatis.org/mybatis-3/zh/index.html
https://www.jianshu.com/p/533904e554f1





	ES6标准入门（第3版）	￥89.10	https://item.jd.com/12172449.html
	ASP.NET MVC 5 框架揭秘	￥79.90	https://item.jd.com/11514830.html
	ASP.NET Core跨平台开发从入门到实战	￥51.10	https://item.jd.com/12063817.html
	大话设计模式	￥38.30	https://item.jd.com/10079261.html
	Python核心编程（第3版）	￥78.20	https://item.jd.com/11936238.html
	Docker技术入门与实战 第2版	￥54.90	https://item.jd.com/12121728.html



https://www.cnblogs.com/csdbfans/p/TransactionScope.html
https://segmentfault.com/a/1190000003031456
https://cn.rx.js.org/manual/overview.html#observable


http://www.fly63.com/article/detial/461
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array
https://blog.csdn.net/qq_28775437/article/details/78750520

https://git-scm.com/book/zh/v2
https://www.jianshu.com/p/ac987e8fe40f
https://www.cnblogs.com/woodytu/p/4693618.html

http://doc.d8jd.com/down/166.html
https://www.cnblogs.com/JimmyZheng/archive/2012/03/17/2402814.html



https://www.cnblogs.com/JimmyZheng/archive/2012/03/17/2402814.html

https://blog.csdn.net/zengcong2013/article/details/50134373


https://cn.rx.js.org/


http://es6.ruanyifeng.com/
http://caibaojian.com/es6/
http://caibaojian.com/book/
http://caibaojian.com/nodejs/
http://caibaojian.com/nodejs/api/documentation.html


https://docs.microsoft.com/zh-cn/aspnet/core/performance/caching/response?view=aspnetcore-2.2
https://docs.microsoft.com/zh-cn/aspnet/core/performance/response-compression?view=aspnetcore-2.2
https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/xmldoc/para

https://www.cnblogs.com/DomoYao/p/Json.html
http://www.cnblogs.com/yanweidie/p/4605212.html
http://www.cnblogs.com/yanweidie/p/5155268.html


https://cn.rx.js.org/class/es6/scheduler/Action.js~Action.html
http://reactivex.io/rxjs/class/es6/AsyncSubject.js~AsyncSubject.html
https://blog.strongbrew.io/building-a-safe-autocomplete-operator-with-rxjs/

https://blog.techbridge.cc/2017/12/08/rxjs/

https://www.cnblogs.com/guohu/p/5562759.html
https://blog.csdn.net/yowasa/article/details/72825866
https://www.cnblogs.com/majiang/p/3174537.html


https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Authentication
http://bbs.bugcode.cn/t/1231
https://blog.csdn.net/kirawoo/article/details/51496174
https://blog.csdn.net/sjt223857130/article/details/80480222
https://try.redis.io/

http://www.cnblogs.com/leoo2sk/archive/2010/10/01/hash-and-encrypt.html
https://825635381.iteye.com/blog/2276077


https://www.cnblogs.com/junbird-nest/archive/2012/04/10/2439828.html
https://www.cnblogs.com/dc20181010/p/10654965.html

https://blog.strongbrew.io/the-sip-principle/

https://www.draw.io/

https://rxviz.com/examples/mouse-move


https://www.cnblogs.com/caokai520/p/4511848.html
https://www.cnblogs.com/hehehehehe/p/6043710.html


https://blog.csdn.net/qq_34377273/article/details/83183307

https://www.cnblogs.com/huangtailang/p/4077168.html


https://blog.csdn.net/chy555chy/article/details/84970042





https://snkcxy.iteye.com/blog/1845862
https://eksliang.iteye.com/blog/2217081
https://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/FileUtils.html
https://blog.csdn.net/u010904188/article/details/82177842
    <dependencies>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
    </dependencies>
    
    
    
    
    
    https://www.cnblogs.com/guochunyang2004/p/8629437.html
    
    
    
    
    
    
    public class RedisHelper
    {
        #region 属性字段

        /// <summary>
        /// Redis 系统自定义Key前缀
        /// </summary>
        private string _customKey = string.Empty;
        /// <summary>
        /// Redis 链接
        /// </summary>
        private readonly IConnectionMultiplexer _connection;
        /// <summary>
        /// Redis操作对象
        /// </summary>
        private readonly IDatabase _redisClient;

        #endregion

        #region 构造函数
        /// <summary>
        /// 初始化Redis操作方法基础类
        /// </summary>
        /// <param name="connection">Redis链接</param>
        /// <param name="dbNum">操作的数据库索引0-64(需要在conf文件中配置)</param>
        public RedisHelper(IConnectionMultiplexer connection, int dbNum = 0)
        {
            _connection = connection;
            _redisClient = _connection.GetDatabase(dbNum);
        }
        #endregion 构造函数

        #region 公共操作方法

        #region 不建议公开这些方法，如果项目中用不到，建议注释或者删除
        /// <summary>
        /// 获取Redis事务对象
        /// </summary>
        /// <returns></returns>
        public ITransaction CreateTransaction() => _redisClient.CreateTransaction();

        /// <summary>
        /// 获取Redis服务和常用操作对象
        /// </summary>
        /// <returns></returns>
        public IDatabase GetDatabase() => _redisClient;

        /// <summary>
        /// 获取Redis服务
        /// </summary>
        /// <param name="hostAndPort"></param>
        /// <returns></returns>
        public IServer GetServer(string hostAndPort) => _connection.GetServer(hostAndPort);

        /// <summary>
        /// 执行Redis事务
        /// </summary>
        /// <param name="act"></param>
        /// <returns></returns>
        public bool RedisTransaction(Action<ITransaction> act)
        {
            var tran = _redisClient.CreateTransaction();
            act.Invoke(tran);
            bool committed = tran.Execute();
            return committed;
        }
        /// <summary>
        /// Redis锁
        /// </summary>
        /// <param name="act"></param>
        /// <param name="ts">锁住时间</param>
        public void RedisLockTake(Action act, TimeSpan ts)
        {
            RedisValue token = Environment.MachineName;
            string lockKey = "lock_LockTake";
            if (_redisClient.LockTake(lockKey, token, ts))
            {
                try
                {
                    act();
                }
                finally
                {
                    _redisClient.LockRelease(lockKey, token);
                }
            }
        }
        #endregion 其他

        #region 常用Key操作
        /// <summary>
        /// 设置前缀
        /// </summary>
        /// <param name="customKey"></param>
        public void SetSysCustomKey(string customKey) => _customKey = customKey;

        /// <summary>
        /// 组合缓存Key名称
        /// </summary>
        /// <param name="oldKey"></param>
        /// <returns></returns>
        public string AddSysCustomKey(string oldKey) => $"{_customKey}_{oldKey}";

        #region 同步方法

        /// <summary>
        /// 删除单个key
        /// </summary>
        /// <param name="key">要删除的key</param>
        /// <returns>是否删除成功</returns>
        public bool KeyDelete(string key)
        {
            key = AddSysCustomKey(key);
            return _redisClient.KeyDelete(key);
        }

        /// <summary>
        /// 删除多个key
        /// </summary>
        /// <param name="keys">要删除的key集合</param>
        /// <returns>成功删除的个数</returns>
        public long KeyDelete(params string[] keys)
        {
            RedisKey[] newKeys = keys.Select(o => (RedisKey)AddSysCustomKey(o)).ToArray();
            return _redisClient.KeyDelete(newKeys);
        }

        /// <summary>
        /// 清空当前DataBase中所有Key
        /// </summary>
        public void KeyFulsh()
        {
            //直接执行清除命令
            _redisClient.Execute("FLUSHDB");
        }

        /// <summary>
        /// 判断key是否存在
        /// </summary>
        /// <param name="key">要判断的key</param>
        /// <returns></returns>
        public bool KeyExists(string key)
        {
            key = AddSysCustomKey(key);
            return _redisClient.KeyExists(key);
        }

        /// <summary>
        /// 重新命名key
        /// </summary>
        /// <param name="key">就的_redisClient key</param>
        /// <param name="newKey">新的_redisClient key</param>
        /// <returns></returns>
        public bool KeyRename(string key, string newKey)
        {
            key = AddSysCustomKey(key);
            newKey = AddSysCustomKey(newKey);
            return _redisClient.KeyRename(key, newKey);
        }

        /// <summary>
        /// 设置Key的过期时间
        /// </summary>
        /// <param name="key">_redisClient key</param>
        /// <param name="expiry">过期时间</param>
        /// <returns></returns>
        public bool KeyExpire(string key, TimeSpan? expiry = default(TimeSpan?))
        {
            key = AddSysCustomKey(key);
            return _redisClient.KeyExpire(key, expiry);
        }

        #endregion

        #region 异步方法

        /// <summary>
        /// 删除单个key
        /// </summary>
        /// <param name="key">要删除的key</param>
        /// <returns>是否删除成功</returns>
        public async Task<bool> KeyDeleteAsync(string key)
        {
            key = AddSysCustomKey(key);
            return await _redisClient.KeyDeleteAsync(key);
        }

        /// <summary>
        /// 删除多个key
        /// </summary>
        /// <param name="keys">要删除的key集合</param>
        /// <returns>成功删除的个数</returns>
        public async Task<long> KeyDeleteAsync(params string[] keys)
        {
            RedisKey[] newKeys = keys.Select(o => (RedisKey)AddSysCustomKey(o)).ToArray();
            return await _redisClient.KeyDeleteAsync(newKeys);
        }

        /// <summary>
        /// 清空当前DataBase中所有Key
        /// </summary>
        public async Task KeyFulshAsync()
        {
            //直接执行清除命令
            await _redisClient.ExecuteAsync("FLUSHDB");
        }

        /// <summary>
        /// 判断key是否存在
        /// </summary>
        /// <param name="key">要判断的key</param>
        /// <returns></returns>
        public async Task<bool> KeyExistsAsync(string key)
        {
            key = AddSysCustomKey(key);
            return await _redisClient.KeyExistsAsync(key);
        }

        /// <summary>
        /// 重新命名key
        /// </summary>
        /// <param name="key">就的_redisClient key</param>
        /// <param name="newKey">新的_redisClient key</param>
        /// <returns></returns>
        public async Task<bool> KeyRenameAsync(string key, string newKey)
        {
            key = AddSysCustomKey(key);
            newKey = AddSysCustomKey(newKey);
            return await _redisClient.KeyRenameAsync(key, newKey);
        }

        /// <summary>
        /// 设置Key的过期时间
        /// </summary>
        /// <param name="key">_redisClient key</param>
        /// <param name="expiry">过期时间</param>
        /// <returns></returns>
        public async Task<bool> KeyExpireAsync(string key, TimeSpan? expiry = default(TimeSpan?))
        {
            key = AddSysCustomKey(key);
            return await _redisClient.KeyExpireAsync(key, expiry);
        }
        #endregion

        #endregion 

        #endregion

        #region 辅助方法

        /// <summary>
        /// 将对象转换成string字符串
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="value"></param>
        /// <returns></returns>
        protected string ConvertJson<T>(T value)
        {
            string result = value is string ? value.ToString() :
                JsonConvert.SerializeObject(value, Formatting.None);
            return result;
        }
        /// <summary>
        /// 将值反系列化成对象
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="value"></param>
        /// <returns></returns>
        protected T ConvertObj<T>(RedisValue value)
        {
            return value.IsNullOrEmpty ? default(T) : JsonConvert.DeserializeObject<T>(value);
        }

        /// <summary>
        /// 将值反系列化成对象集合
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="values"></param>
        /// <returns></returns>
        protected List<T> ConvetList<T>(RedisValue[] values)
        {
            List<T> result = new List<T>();
            foreach (var item in values)
            {
                var model = ConvertObj<T>(item);
                result.Add(model);
            }
            return result;
        }
        /// <summary>
        /// 将string类型的Key转换成 <see cref="RedisKey"/> 型的Key
        /// </summary>
        /// <param name="redisKeys"></param>
        /// <returns></returns>
        protected RedisKey[] ConvertRedisKeys(List<string> redisKeys) => redisKeys.Select(redisKey => (RedisKey)redisKey).ToArray();

        /// <summary>
        /// 将string类型的Key转换成 <see cref="RedisKey"/> 型的Key
        /// </summary>
        /// <param name="redisKeys"></param>
        /// <returns></returns>
        protected RedisKey[] ConvertRedisKeys(params string[] redisKeys) => redisKeys.Select(redisKey => (RedisKey)redisKey).ToArray();

        /// <summary>
        /// 将string类型的Key转换成 <see cref="RedisKey"/> 型的Key，并添加前缀字符串
        /// </summary>
        /// <param name="redisKeys"></param>
        /// <returns></returns>
        protected RedisKey[] ConvertRedisKeysAddSysCustomKey(params string[] redisKeys) => redisKeys.Select(redisKey => (RedisKey)AddSysCustomKey(redisKey)).ToArray();
        /// <summary>
        /// 将值集合转换成RedisValue集合
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="redisValues"></param>
        /// <returns></returns>
        protected RedisValue[] ConvertRedisValue<T>(params T[] redisValues) => redisValues.Select(o => (RedisValue)ConvertJson<T>(o)).ToArray();
        #endregion 辅助方法
    }
    
    
    
    
    StackExchange.Redis;
    


https://www.redis.net.cn/




apache-jmeter-2.13





https://blog.csdn.net/ahilll/article/details/82787240
https://yangshunjie.com/A-Middleware-Implement-For-Customized-Routing-In-AspNetCore.html
https://www.cnblogs.com/savorboard/p/dontnet-IApplicationModelConvention.html
https://docs.microsoft.com/zh-cn/aspnet/core/mvc/controllers/routing?view=aspnetcore-2.2
https://www.strathweb.com/2016/06/global-route-prefix-with-asp-net-core-mvc-revisited/


https://www.cnblogs.com/artech/p/asp-net-core-di-ioc.html

https://blog.csdn.net/WPwalter/article/details/79673214
https://blog.walterlv.com/post/deadlock-in-task-wait.html


https://juejin.im/post/5c6a996de51d4572b24b2d4b
http://blog.sina.com.cn/s/blog_7c7da1040102wzwf.html



https://fluentvalidation.net/


NuGet上传包：
https://www.cnblogs.com/tomfang/articles/3999303.html
http://www.skcircle.com/?id=199
https://blog.csdn.net/qq285679784/article/details/88864222
https://www.cnblogs.com/daxnet/archive/2013/05/07/3064577.html
https://github.com/NuGetPackageExplorer/NuGetPackageExplorer/releases

https://www.cnblogs.com/icebutterfly/archive/2012/02/06/2340313.html
https://blog.csdn.net/u011555996/article/details/53173930


https://blog.lindexi.com/post/c-%E5%BA%8F%E5%88%97%E7%B1%BB%E4%B8%BA-xml-%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E7%9A%84%E7%89%B9%E6%80%A7%E5%A4%A7%E5%85%A8
https://blog.csdn.net/fxhflower/article/details/7276820
https://www.cnblogs.com/icebutterfly/archive/2013/03/29/2989038.html
https://blog.ite2.com/%E6%8A%80%E8%A1%93%E6%8E%A2%E8%A8%8Exml%E5%BA%8F%E5%88%97%E5%8C%96serialize%E8%88%87%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96deserialize-%E4%B8%8B%E7%AF%87/



正则：
https://c.runoob.com/front-end/854
https://tool.oschina.net/uploads/apidocs/jquery/regexp.html
https://tool.oschina.net/regex



https://www.jetbrains.com/student/
https://sales.jetbrains.com/hc/zh-cn/articles/207154369-%E5%AD%A6%E7%94%9F%E6%8E%88%E6%9D%83%E7%94%B3%E8%AF%B7%E6%96%B9%E5%BC%8F
https://blog.wolfogre.com/posts/buy-jetbrains/
https://sales.jetbrains.com/hc/en-gb/articles/207240845-What-is-perpetual-fallback-license-



https://www.zrahh.com/archives/30.html
https://www.4spaces.org/apply-edu-email/
https://rrcc.elluciancrmrecruit.com/Admissions/Pages/application.aspx?id=dbcbad8a-fec9-e911-80da-0a55929b4b62&typeid=c280e80c-9dd7-e811-80d7-0e8acc8fc4f4

https://bannercas.cccs.edu/cas/login?service=https%3A%2F%2Fmyportal.cccs.edu%2Fhtml%2Fjsp%2FCCCS%2FvpdiChange.jsp%3Fvpdi%3DRRCC

https://rrcc.elluciancrmrecruit.com/Admissions/Pages/MyAccount.aspx

https://kingjamesyf.github.io/2018/04/12/Markdown%E8%AF%AD%E6%B3%95/


https://www.runoob.com/mongodb/mongodb-window-install.html
https://cn.httprunner.org/
https://blog.csdn.net/qq_22063697/article/details/78069787
https://www.cnblogs.com/chanshuyi/p/quick_start_of_mongodb.html
https://www.mongodbmanager.com/

https://www.cnblogs.com/dudu/archive/2012/03/21/title_encodeURIComponent_iis_xss.html
https://www.cnblogs.com/xdp-gacl/p/3722642.html
https://blog.csdn.net/phantomes/article/details/26570113
https://blog.csdn.net/Sunny_Ran/article/details/53010433



Compare Plugin、XML Tools、JSON Viewer、MarkdownViewer++



https://www.cnblogs.com/clsn/p/7885990.html
https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/local-functions



https://ithelp.ithome.com.tw/users/20107789/ironman/1574


https://chocolatey.org


https://www.ibm.com/developerworks/cn/opensource/os-cn-elk/index.html


http://www.hechaku.com/sqlfunction/SQL_TRIM__hanshu.html



https://zazalu.space/2019/09/17/java-memory-error-solution-Theoretically/





/// <summary>
/// 格式化为xml字符串 
/// </summary>
/// <typeparam name="T"></typeparam>
/// <param name="obj"></param>
/// <returns></returns>
private string SerializeToString<T>(T obj)
{
    // 去掉xml头
    XmlWriterSettings settings = new XmlWriterSettings()
    {
        OmitXmlDeclaration = true,
        Indent = true,
        Encoding = Encoding.UTF8,
        NamespaceHandling = NamespaceHandling.Default
    };
    // 定制命名空间
    XmlSerializerNamespaces namespaces = new XmlSerializerNamespaces();
    namespaces.Add("", "https://github.com/LeeHelen");

    using (StringWriter stringWriter = new StringWriter())
    {
        Type t = obj.GetType();
        System.Xml.Serialization.XmlSerializer serializer = new System.Xml.Serialization.XmlSerializer(t);

        using (XmlWriter xmlWriter = XmlWriter.Create(stringWriter, settings))
        {
            serializer.Serialize(xmlWriter, obj, namespaces);
        }
        return stringWriter.ToString();
    }
}


XML:
https://docs.microsoft.com/zh-cn/dotnet/csharp/linq/group-query-results
https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/concepts/linq/querying-an-xdocument-vs-querying-an-xelement
https://blog.csdn.net/IstarI/article/details/51559052
https://www.cnblogs.com/libingql/p/4070575.html
https://www.cnblogs.com/lifepoem/archive/2011/12/12/2285092.html
https://www.cnblogs.com/mingmingruyuedlut/archive/2011/01/27/1946239.html



XDocument ssbXDocument = new XDocument(
    new XElement("Publish".GetXNameWithNamespace(),
        new XElement("FromService".GetXNameWithNamespace(), ""),
        new XElement("ToService".GetXNameWithNamespace(), ""),
        new XElement("RouteTable".GetXNameWithNamespace(),
            new XElement("Article".GetXNameWithNamespace(),
                new XElement("ArticleCategory".GetXNameWithNamespace(), "MarketPlaceMessage"),
                new XElement("ArticleType1".GetXNameWithNamespace(), "ProgramInfo"),
                new XElement("ArticleType2".GetXNameWithNamespace(), "1003")
            )
        ),
        new XElement("Node".GetXNameWithNamespace(),
            new XElement("MessageHead".GetXNameWithNamespace(),
                new XElement("Namespace".GetXNameWithNamespace(), ""),
                new XElement("Version".GetXNameWithNamespace(), "1.0"),
                new XElement("Sender".GetXNameWithNamespace(), ""),
                new XElement("FromSystem".GetXNameWithNamespace(), ""),
                new XElement("GlobalBusinessType".GetXNameWithNamespace(), ""),
                new XElement("TransactionCode".GetXNameWithNamespace(), "")
            )
        ),
        new XElement("Body".GetXNameWithNamespace())
    )
);
var xxxxx = ssbXDocument.ToString();

https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/concepts/linq/how-to-create-a-document-with-namespaces-linq-to-xml
https://stackoverflow.com/questions/11021931/how-do-i-set-namespace-attributes-on-an-xelement/11024621
https://stackoverflow.com/questions/4340096/xelement-adds-an-xmlns
https://tewarid.github.io/2015/09/29/create-xml-documents-in-linq.html
https://blog.csdn.net/yuxuac/article/details/64905773








https://www.cnblogs.com/gaochundong/archive/2013/05/21/nsubstitute_get_started.html




https://googlehelper.net/



https://www.cnblogs.com/xdot/p/6632313.html


https://www.xcode.me/post/5849
https://www.cnblogs.com/libingql/p/3801704.html
http://www.ishenping.com/ArtInfo/1238046.html
http://www.ojit.com/article/234731



https://www.cnblogs.com/artech/p/inside-asp-net-core-1.html
https://www.cnblogs.com/artech/archive/2010/01/31/1660433.html
https://www.cnblogs.com/artech/p/hosting-environment.html
https://www.cnblogs.com/artech/p/add-headers-for-httpclient.html
https://www.cnblogs.com/artech/p/dependency-injection-in-asp-net-core.html


https://my.oschina.net/weisenz/blog/200607


https://www.html.cn/doc/chrome-devtools/manage-data/local-storage/


https://www.cnblogs.com/springsnow/p/9412885.html


https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-Chinese-Traditional.pdf


https://www.fangzhipeng.com/spring-boot.html


Eclipse自定义注释风格
https://www.jianshu.com/p/98f818f0ef73
https://my.oschina.net/songxinqiang/blog/1806701
https://blog.csdn.net/qq_34412985/article/details/79279136



UT:
https://nsubstitute.github.io/help/getting-started/



[HttpGet("result1")]
        public async Task<ActionResult<xxxx>> Index(int id)
        {
            if (id < 1)
            {
                return BadRequest(new
                {
                    ResponseCode = "400",
                    Message = "Value cannot be null.\nParameter name: xxxxx",
                    StatusCode = Convert.ToInt32(System.Net.HttpStatusCode.BadRequest)
                });
            }

            // 模拟异步
            HttpClient client = new HttpClient();
            HttpResponseMessage response = await client.GetAsync("http://www.google.com/");
            response.EnsureSuccessStatusCode();
            string responseBody = await response.Content.ReadAsStringAsync();

            return new xxxxx()
            {
                Message = responseBody.Substring(1,50)
            };
        }

        //自定义异常：throw new BusinessException($"Value cannot be null.\nParameter name: {nameof(xxxx)},{nameof(yyyy)}");



http://www.gimoo.net/t/1802/5a7669261cf29.html
https://my.oschina.net/u/1170450/blog/1631173
https://www.jianshu.com/p/041bec8ae6d3




https://www.cnblogs.com/zhoading/p/10760377.html


https://blog.csdn.net/qq_2300688967/article/details/80765004



        #region check null or empty

        public static bool IsNullOrEmpty(this IEnumerable source)
        {
            return !source.IsNotNullOrEmpty();
        }

        public static bool IsNotNullOrEmpty(this IEnumerable source)
        {
            return (source?.GetEnumerator()?.MoveNext()).GetValueOrDefault();
        }

        #endregion check null or empty
	
	    /// <summary>判断是否为null，null或0长度都返回true</summary>
    /// <typeparam name="T"></typeparam>
    /// <param name="value"></param>
    /// <returns></returns>
    public static bool IsNullOrEmpty<T>(this T value) where T : class
    {
      if ((object) value == null)
        return true;
      IEnumerator enumerator = ((object) value as IEnumerable)?.GetEnumerator();
      if (enumerator == null)
        return false;
      bool flag = !enumerator.MoveNext();
      if (flag)
        return true;
      return flag;
    }
    
 



/// <summary>
    /// Auto Convert Json string to object
    ///  </summary>
    /// <typeparam name="T">Object Type</typeparam>
    /// <param name="jsonStr">Json String</param>
    /// <returns>Json format string</returns>
    public static T ToObjectExt<T>(this string jsonStr)
    {
      JsonSerializerSettings settings = new JsonSerializerSettings()
      {
        NullValueHandling = NullValueHandling.Ignore
      };
      IsoDateTimeConverter dateTimeConverter = new IsoDateTimeConverter()
      {
        DateTimeFormat = "MM\\/dd\\/yyyy HH:mm:ss"
      };
      settings.Converters.Add((JsonConverter) dateTimeConverter);
      return JsonConvert.DeserializeObject<T>(jsonStr, settings);
    }
    
    
    
    /// <summary>
    /// Auto Convert object to Json
    /// </summary>
    /// <typeparam name="T">Object Type</typeparam>
    /// <param name="obj">the given original object</param>
    /// <param name="jsonSerializerSettings">json setting</param>
    /// <returns>Json format string</returns>
    public static string ToJsonExt<T>(this T obj, JsonSerializerSettings jsonSerializerSettings = null) where T : class
    {
      if ((object) obj == null)
        return string.Empty;
      jsonSerializerSettings = jsonSerializerSettings ?? JsonSerializerSettingConst.DefaultSetting;
      return JsonConvert.SerializeObject((object) obj, jsonSerializerSettings);
    }
    
    
    
    https://xunit.net/docs/comparisons#assertions
    https://xz.aliyun.com/t/6776?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io
    https://xunit.net/docs/comparisons#note2
    https://xunit.net/#documentation
    https://www.520mwx.com/view/43293



c#：
https://www.cnblogs.com/cgzl/p/8444423.html
https://andrewlock.net/creating-parameterised-tests-in-xunit-with-inlinedata-classdata-and-memberdata/
https://www.codeproject.com/Articles/800923/Various-Mock-Setups-Using-Moq-Framework
https://stackoverflow.com/questions/10323794/mocking-a-method-to-throw-an-exception-moq-but-otherwise-act-like-the-mocked
https://www.syntaxsuccess.com/viewarticle/mock-exceptions-using-moq
https://nsubstitute.github.io/help/actions-with-arguments/


java：
https://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-tests
https://howtodoinjava.com/junit5/expected-exception-example/










public static class ObjectExtension
    {
        /// <summary>判断是否为null，null或0长度都返回true，兼容低版本</summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="value"></param>
        /// <returns></returns>
        public static bool IsNullOrEmpty<T>(this T value) where T : class
        {
            if (value == null)
                return true;

            IEnumerable enumerable = value as IEnumerable;
            if (enumerable == null)
                return false;

            IEnumerator enumerator = enumerable.GetEnumerator();

            return !enumerator.MoveNext();
        }

        /// <summary>
        /// 判断是否为null，null或0长度都返回true，NetCore
        /// </summary>
        /// <param name="source"></param>
        /// <returns></returns>
        public static bool IsNullOrEmpty(this IEnumerable source)
        {
            return !source.IsNotNullOrEmpty();
        }

        /// <summary>
        /// 判断是否为null，null或0长度都返回true，NetCore
        /// </summary>
        /// <param name="source"></param>
        /// <returns></returns>
        public static bool IsNotNullOrEmpty(this IEnumerable source)
        {
            return (source?.GetEnumerator()?.MoveNext()).GetValueOrDefault();
        }
    }

    public class ObjectExtensionUT
    {
        [Theory]
        [InlineData(null)]
        [InlineData("")]
        public void IsNullOrEmpty_String_Test(string input)
        {
            Assert.True(input.IsNullOrEmpty());
        }

        [Fact]
        public void IsNullOrEmpty_Array_Test()
        {
            int[] array = null;
            Assert.True(array.IsNullOrEmpty());
            array = new int[0];
            Assert.True(array.IsNullOrEmpty());

            ArrayList arrayList = null;
            Assert.True(arrayList.IsNullOrEmpty());
            arrayList = new ArrayList();
            Assert.True(arrayList.IsNullOrEmpty());
        }

        [Fact]
        public void IsNullOrEmpty_List_Test()
        {
            List<string> list = null;
            Assert.True(list.IsNullOrEmpty());
            list = new List<string>();
            Assert.True(list.IsNullOrEmpty());
        }

        [Fact]
        public void IsNullOrEmpty_Hashtable_Test()
        {
            Hashtable hashtable = null;
            Assert.True(hashtable.IsNullOrEmpty());
            hashtable = new Hashtable();
            Assert.True(hashtable.IsNullOrEmpty());
        }

        [Fact]
        public void IsNullOrEmpty_Dictionary_Test()
        {
            Dictionary<string,string> dic = null;
            Assert.True(dic.IsNullOrEmpty());
            dic = new Dictionary<string, string>();
            Assert.True(dic.IsNullOrEmpty());
        }
    }
    
    
    
    
    blockSellerArray = Arrays
					.stream(StringUtils.split(blockSellers, ','))
					.filter(s -> s != null && StringUtils.isNoneBlank(s))
					.map(String::toUpperCase)
					.toArray(String[]::new);
					
					
		https://juejin.im/post/5adbf8226fb9a07aac240a67			
					





https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/?q=



https://www.bejson.com/json/col2json/



https://blog.csdn.net/zhuoyue008/article/details/53382194
https://blog.csdn.net/yblybl6/article/details/78353626
https://www.cnblogs.com/SeawinLong/p/3936846.html



https://cmder.net/
Version 1.3.12.915


https://yeasy.gitbooks.io/docker_practice/content/


https://docs.microsoft.com/zh-cn/dotnet/core/install/localized-intellisense
C:\Program Files\dotnet\sdk\NuGetFallbackFolder\microsoft.netcore.app\2.2.0\ref\netcoreapp2.2\zh-hans




https://www.itsvse.com/forum.php
https://www.cnblogs.com/landeanfen/p/5501490.html






https://docs.rancher.cn/os/
https://www.rancher.cn/rancher-k3s/




https://symbols.nuget.org/download/symbols
https://blog.lindexi.com/post/NuGet-%E7%AC%A6%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8.html
dnSpy



https://blog.csdn.net/wangpeng047/article/details/9203445
https://blog.csdn.net/osirissssss/article/details/78424592
https://www.jianshu.com/p/7fe7a609f7fa
https://blog.csdn.net/starcrm/article/details/84969324
https://www.ibm.com/developerworks/cn/java/j-jtp06197.html


SymbolCache


https://www.cnblogs.com/yumiaoxia/p/10414212.html


https://doczhcn.gitbook.io/junit5/index/index-2/parameterized-tests#csvsource


https://www.cnblogs.com/1175429393wljblog/p/12035084.html






https://www.cnblogs.com/woshimrf/p/java-list-distinct.html
https://juejin.im/post/5cd6b719f265da03b2044d56
https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/469602/
https://www.javazhiyin.com/52193.html
https://blog.csdn.net/liuj2511981/article/details/82180776
https://blog.csdn.net/shu_xiaobai/article/details/79559836
https://windcoder.com/java8delistquzhong
https://www.cnblogs.com/xuwenjin/p/9660393.html  !!!!!!!
https://segmentfault.com/a/1190000005738975
https://segmentfault.com/a/1190000021503678
https://blog.csdn.net/u013591605/article/details/75267629







https://blog.csdn.net/changqing5818/article/details/50008829
https://www.jianshu.com/p/197552e0655e?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
http://www.javacui.com/Theory/417.html
https://blog.nowcoder.net/n/e72958ad6c044babb8c0bdbd11f55401





https://doczhcn.gitbook.io/junit5/index/index-2/parameterized-tests



https://juejin.im/post/5adbf8226fb9a07aac240a67





https://blog.csdn.net/yangxu19992/article/details/80901987
